version: '3'
networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: { }
  grafana_data: { }

services:
  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    expose:
      - 9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
    ports:
      - "3000:3000"
    expose:
      - 3000
    networks:
      - monitoring

  zookeeper:
    image: debezium/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-ui:
    image: quay.io/cloudhut/kowl:master
    restart: on-failure
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: kafka:9092

  kafka-create-topics:
    image: confluentinc/cp-kafka:6.1.1
    restart: on-failure
    depends_on:
      - zookeeper
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                           cub kafka-ready -b kafka:9092 1 20 && \
                           kafka-topics --create --topic konsumer --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 && \
                           kafka-topics --create --topic konsumer-retry --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 && \
                           sleep infinity'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored